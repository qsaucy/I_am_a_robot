import time
import os
beginrobot = '''





┌------------------------------------------------┐
|                                                | 
|                                       ...      |
|     ┌---┐                            '   '     |
|     |   |    I'm a robot              ººº      |
|     └---┘                                      |
|                                   Quentin      |
|                                    Saucy       |
|                                                |
└------------------------------------------------┘
'''
clickedrobot = '''





┌------------------------------------------------┐
|                                                | 
|                                       ...      |
|     \033[38;5;20m╔═══╗\033[0m                            '   '     |
|     \033[38;5;21m║   ║\033[0m    I'm a robot              ººº      |
|     \033[38;5;20m╚═══╝\033[0m                                      |
|                                   Quentin      |
|                                    Saucy       |
|                                                |
└------------------------------------------------┘
'''
def challenge(format,to_print,selected):
    if format==4:
        selectedArray=[]
        for i in range(16):
            selectedArray.append(int(i in selected))
        return f''' 
             ┌----------------------------------------------┐
             |                                              |
             |   {to_print.ljust(20)}                       |
             |                                              |
             \033[38;5;{81 * selectedArray[0]}m├-----------\033[0m\033[38;5;{ 81 * selectedArray[1]}m\033[0m\033[38;5;{81 * selectedArray[2]}m┬-----------┬-----------┬\033[0m----------┤
┌------------\033[38;5;{81 * selectedArray[0]}m|           \033[38;5;{81 * selectedArray[1]}m\033[0m\033[38;5;{81 * selectedArray[2]}m|           |           |\033[0m          |
|            \033[38;5;{81 * selectedArray[0]}m|           \033[38;5;{81 * selectedArray[1]}m\033[0m\033[38;5;{81 * selectedArray[2]}m|           |           |\033[0m          |    
|            \033[38;5;{81 * (selectedArray[0]or selectedArray[4])}m|-----------\033[38;5;{81 * (selectedArray[5]or selectedArray[1])}m\033[0m\033[38;5;{81 * selectedArray[2]or selectedArray[6]}m┼-----------┼-----------┼\033[0m----------|
|     ╔═══╗ /            |           \033[38;5;81m|           |\033[0m          |
|     ║   ║<             |           \033[38;5;81m|           |\033[0m          |
|     ╚═══╝ \  ----------┼-----------\033[38;5;81m┼-----------┼\033[0m----------|
|            |           |           |           |          |
|            |           |           |           |          |
|            | ----------┼-----------┼-----------┼----------|
└------------|           |           |           |          |
             |           |           |           |          |
             └-----------┴-----------┴-----------┴----------┘
'''
    else:
        return  f''' 
             ┌----------------------------------------------┐
             |                                              |
             |   {to_print.ljust(20)}                       |
             |                                              |
             \033[38;5;81m├--------------┬\033[0m---------------┬---------------┤
┌------------\033[38;5;81m|              |\033[0m               |               |
|            \033[38;5;81m|              |\033[0m               |               |    
|            \033[38;5;81m|              |\033[0m               |               |
|     ╔═══╗ /\033[38;5;81m├ -------------\033[38;5;81m┼---------------┼---------------|\033[0m
|     ║   ║< |              \033[38;5;81m|               |               |\033[0m
|     ╚═══╝ \|              \033[38;5;81m|               |               |\033[0m
|            |              \033[38;5;81m|               |               |\033[0m
|            | -------------\033[38;5;81m┼---------------┼---------------|\033[0m
|            |              |               |               |
└------------|              |               |               |
             |              |               |               |       
             └--------------┴---------------┴---------------┘
'''
endrobot = '''





┌------------------------------------------------┐
|                                                | 
|                                       ...      |
|     ┌---┐                            '   '     |
|     | √ |    I'm a robot              ººº      |
|     └---┘                                      |
|                                   Quentin      |
|                                    Saucy       |
|                                                |
└------------------------------------------------┘
'''
def get_ascci_captcha(step, size=3, to_search="car", selected=None):
    if selected is None:
        selected = [-1]
    os.system('cls' if os.name == 'nt' else 'clear')
    if step=="begin":
        return  beginrobot
    elif step =="click":
        return clickedrobot
    elif step=="challenge":
        return challenge(size,to_search,selected)
    else:
        return endrobot
